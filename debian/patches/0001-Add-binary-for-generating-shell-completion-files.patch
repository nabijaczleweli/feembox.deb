From 9e5798364db82188182cd7ee68b5319558b82bb7 Mon Sep 17 00:00:00 2001
From: наб <nabijaczleweli@nabijaczleweli.xyz>
Date: Sun, 23 Feb 2020 15:17:42 +0100
Subject: [PATCH] Add binary for generating shell completion files

---
 Cargo.toml                       | 12 ++++++++++++
 src/feembox-build-completions.rs | 17 +++++++++++++++++
 src/options.rs                   | 10 +++++++---
 3 files changed, 36 insertions(+), 3 deletions(-)
 create mode 100755 src/feembox-build-completions.rs

diff --git a/Cargo.toml b/Cargo.toml
index 4cb7a23..5d9c15d 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -13,6 +13,18 @@ version = "0.1.0"
 authors = ["наб <nabijaczleweli@gmail.com>"]
 exclude = ["*.enc"]
 
+[[bin]]
+name = "feembox"
+path = "src/main.rs"
+test = false
+doc = false
+
+[[bin]]
+name = "feembox-build-completions"
+path = "src/feembox-build-completions.rs"
+test = false
+doc = false
+
 
 [dependencies]
 linked_hash_set = "0.1"
diff --git a/src/feembox-build-completions.rs b/src/feembox-build-completions.rs
new file mode 100755
index 0000000..03e79c3
--- /dev/null
+++ b/src/feembox-build-completions.rs
@@ -0,0 +1,17 @@
+extern crate mime;
+#[macro_use]
+extern crate clap;
+
+mod options;
+
+pub use options::Options;
+
+use clap::Shell;
+
+
+fn main() {
+    let mut app = Options::app();
+    for &shell in &[Shell::Bash, Shell::Zsh, Shell::Fish] {
+        app.gen_completions("feembox", shell, ".");
+    }
+}
diff --git a/src/options.rs b/src/options.rs
index abf703b..2913917 100644
--- a/src/options.rs
+++ b/src/options.rs
@@ -79,10 +79,9 @@ pub struct Options {
 }
 
 impl Options {
-    /// Parse `env`-wide command-line arguments into an `Options` instance
-    pub fn parse() -> Options {
+    pub fn app() -> clap::App<'static, 'static> {
         #[allow(deprecated)]
-        let matches = app_from_crate!("\n")
+        app_from_crate!("\n")
             .setting(AppSettings::ColoredHelp)
             .arg(Arg::from_usage("[MAILDIR] 'Where to write to the mails to. Default: .'").validator(|s| Options::parse_maildir_path(&s).map(|_| ())))
             .arg(Arg::from_usage("[FEED] 'Where to read the feed from. Default: stdin'").validator(|s| Options::parse_feed_path(&s).map(|_| ())))
@@ -91,6 +90,11 @@ impl Options {
                 .validator(|s| Options::parse_alternatives_transformations(&s).map(|_| ()))
                 .number_of_values(1))
             .arg(Arg::from_usage("-f --force [MIME] 'Type to force content to'").validator(|s| Options::parse_mime_override(&s).map(|_| ())))
+    }
+
+    /// Parse `env`-wide command-line arguments into an `Options` instance
+    pub fn parse() -> Options {
+        let matches = Options::app()
             .get_matches();
 
         Options {
-- 
2.20.1

